{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","start","clickNext","props","step","itemWidth","frameSize","images","infinite","maxTransition","length","setState","clickPrev","this","animationDuration","className","style","width","transform","transitionDuration","map","image","height","src","alt","slice","lastIndexOf","type","onClick","Component","App","handleEvent","id","element","document","querySelector","value","Error","htmlFor","onChange","React","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8588d963.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n\n};\n\ntype State = {\n  start: number;\n};\n\nexport class Carousel extends Component<Props, State> {\n  state: Readonly<State> = {\n    start: 0,\n  };\n\n  clickNext = () => {\n    const {\n      step,\n      itemWidth,\n      frameSize,\n      images,\n      infinite,\n    } = this.props;\n\n    const maxTransition = (images.length * itemWidth) - (frameSize * itemWidth);\n\n    if (infinite && this.state.start <= -maxTransition) {\n      this.setState({\n        start: (frameSize * itemWidth),\n      });\n    }\n\n    this.setState(state => ({\n      start: (state.start - (step * itemWidth)) < -maxTransition\n        ? -maxTransition\n        : (state.start - (step * itemWidth)),\n    }));\n  };\n\n  clickPrev = () => {\n    const {\n      step,\n      itemWidth,\n      images,\n      infinite,\n    } = this.props;\n\n    if (infinite && this.state.start >= 0) {\n      this.setState({\n        start: -(images.length * itemWidth),\n      });\n    }\n\n    this.setState(state => ({\n      start: (state.start + (step * itemWidth)) > 0\n        ? 0\n        : (state.start + (step * itemWidth)),\n    }));\n  };\n\n  render() {\n    const { start } = this.state;\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      animationDuration,\n    } = this.props;\n\n    return (\n      <div className=\"Carousel\">\n        <div\n          className=\"Carousel__wrapper\"\n          style={{ width: itemWidth * frameSize }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transform: `translate(${start}px)`, transitionDuration: `${animationDuration}ms`,\n            }}\n          >\n            {images.map(image => (\n              <li\n                style={{ height: itemWidth }}\n                key={image}\n                className=\"Carousel__item\"\n              >\n                <img\n                  style={{ width: itemWidth }}\n                  src={image}\n                  alt={image.slice(image.lastIndexOf('/') + 1, -4)}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            className=\"Carousel__button\"\n            type=\"button\"\n            onClick={this.clickPrev}\n          >\n            Prev\n          </button>\n\n          <button\n            className=\"Carousel__button\"\n            type=\"button\"\n            onClick={this.clickNext}\n            data-cy=\"next\"\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleEvent = (id: string) => {\n    const element = document.querySelector(`#${id}`) as HTMLInputElement;\n\n    switch (id) {\n      case 'step':\n        if (+element.value >= 0 && +element.value <= 10) {\n          this.setState({\n            [id]: +element.value,\n          });\n        }\n\n        break;\n\n      case 'frameSize':\n        if (+element.value >= 0 && +element.value <= 10) {\n          this.setState({\n            [id]: +element.value,\n          });\n        }\n\n        break;\n\n      case 'itemWidth':\n        if (+element.value >= 0 && +element.value <= 400) {\n          this.setState({\n            [id]: +element.value,\n          });\n        }\n\n        break;\n\n      case 'animationDuration':\n        if (+element.value >= 0 && +element.value <= 10000) {\n          this.setState({\n            [id]: +element.value,\n          });\n        }\n\n        break;\n\n      case 'infinite':\n        this.setState(state => ({\n          [id]: !state.infinite,\n        }));\n\n        break;\n\n      default:\n        throw new Error('Wrong id');\n    }\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <form className=\"App__form\">\n          <label className=\"App__field\" htmlFor=\"step\">Step</label>\n\n          <input\n            id=\"step\"\n            className=\"App__input\"\n            type=\"number\"\n            onChange={() => (this.handleEvent('step'))}\n            value={step}\n          />\n\n          <label className=\"App__field\" htmlFor=\"frameSize\">Frame Size</label>\n\n          <input\n            id=\"frameSize\"\n            className=\"App__input\"\n            type=\"number\"\n            onChange={() => (this.handleEvent('frameSize'))}\n            value={frameSize}\n          />\n\n          <label className=\"App__field\" htmlFor=\"itemWidth\">Item Width</label>\n\n          <input\n            id=\"itemWidth\"\n            className=\"App__input\"\n            type=\"number\"\n            onChange={() => (this.handleEvent('itemWidth'))}\n            value={itemWidth}\n          />\n\n          <label\n            className=\"App__field\"\n            htmlFor=\"animationDuration\"\n          >\n            Animation Duration\n          </label>\n\n          <input\n            id=\"animationDuration\"\n            className=\"App__input\"\n            type=\"number\"\n            onChange={() => (this.handleEvent('animationDuration'))}\n            value={animationDuration}\n          />\n\n          <label className=\"App__field\" htmlFor=\"infinite\">Infinite</label>\n\n          <input\n            type=\"checkbox\"\n            onChange={() => (this.handleEvent('infinite'))}\n          />\n        </form>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}